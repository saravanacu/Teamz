{
  "version": 3,
  "sources": ["../../react-map-gl/src/exports-mapbox.ts", "../../react-map-gl/src/components/map.tsx", "../../react-map-gl/src/components/use-map.tsx", "../../react-map-gl/src/utils/deep-equal.ts", "../../react-map-gl/src/utils/transform.ts", "../../react-map-gl/src/utils/style-utils.ts", "../../react-map-gl/src/mapbox/mapbox.ts", "../../react-map-gl/src/mapbox/create-ref.ts", "../../react-map-gl/src/utils/use-isomorphic-layout-effect.ts", "../../react-map-gl/src/utils/set-globals.ts", "../../react-map-gl/src/components/marker.ts", "../../react-map-gl/src/utils/apply-react-style.ts", "../../react-map-gl/src/components/popup.ts", "../../react-map-gl/src/components/attribution-control.ts", "../../react-map-gl/src/components/use-control.ts", "../../react-map-gl/src/components/fullscreen-control.tsx", "../../react-map-gl/src/components/geolocate-control.ts", "../../react-map-gl/src/components/navigation-control.ts", "../../react-map-gl/src/components/scale-control.ts", "../../react-map-gl/src/components/layer.ts", "../../react-map-gl/src/utils/assert.ts", "../../react-map-gl/src/components/source.ts"],
  "sourcesContent": ["import * as React from 'react';\r\nimport type {\r\n  Map as MapboxMap,\r\n  MapboxOptions,\r\n  Marker as MapboxMarker,\r\n  MarkerOptions,\r\n  Popup as MapboxPopup,\r\n  PopupOptions,\r\n  AttributionControl as MapboxAttributionControl,\r\n  FullscreenControl as MapboxFullscreenControl,\r\n  GeolocateControl as MapboxGeolocateControl,\r\n  NavigationControl as MapboxNavigationControl,\r\n  ScaleControl as MapboxScaleControl\r\n} from 'mapbox-gl';\r\nimport {MapStyle, AnyLayer, AnySource} from './types/style-spec-mapbox';\r\n\r\nimport {default as _Map, MapProps as _MapProps} from './components/map';\r\nimport {default as _Marker, MarkerProps as _MarkerProps} from './components/marker';\r\nimport {default as _Popup, PopupProps as _PopupProps} from './components/popup';\r\nimport {\r\n  default as _AttributionControl,\r\n  AttributionControlProps as _AttributionControlProps\r\n} from './components/attribution-control';\r\nimport {\r\n  default as _FullscreenControl,\r\n  FullscreenControlProps as _FullscreenControlProps\r\n} from './components/fullscreen-control';\r\nimport {\r\n  default as _GeolocateControl,\r\n  GeolocateControlProps as _GeolocateControlProps\r\n} from './components/geolocate-control';\r\nimport {\r\n  default as _NavigationControl,\r\n  NavigationControlProps as _NavigationControlProps\r\n} from './components/navigation-control';\r\nimport {\r\n  default as _ScaleControl,\r\n  ScaleControlProps as _ScaleControlProps\r\n} from './components/scale-control';\r\nimport {default as _Layer, LayerProps as _LayerProps} from './components/layer';\r\nimport {default as _Source, SourceProps as _SourceProps} from './components/source';\r\nimport {useMap as _useMap} from './components/use-map';\r\nimport type {MapRef as _MapRef} from './mapbox/create-ref';\r\nimport type * as events from './types/events';\r\nimport type {MapCallbacks} from './types/events-mapbox';\r\n\r\nexport function useMap() {\r\n  return _useMap<MapboxMap>();\r\n}\r\n\r\nexport type MapProps = _MapProps<MapboxOptions, MapStyle, MapCallbacks, MapboxMap>;\r\nexport type MapRef = _MapRef<MapboxMap>;\r\nconst mapLib = import('mapbox-gl');\r\nexport const Map = (() => {\r\n  return React.forwardRef(function Map(props: MapProps, ref: React.Ref<MapRef>) {\r\n    return _Map<MapboxOptions, MapStyle, MapCallbacks, MapboxMap>(props, ref, mapLib);\r\n  });\r\n})();\r\n\r\nexport type MarkerProps = _MarkerProps<MarkerOptions, MapboxMarker>;\r\nexport const Marker = _Marker as (\r\n  props: MarkerProps & React.RefAttributes<MapboxMarker>\r\n) => React.ReactElement | null;\r\n\r\nexport type PopupProps = _PopupProps<PopupOptions, MapboxPopup>;\r\nexport const Popup = _Popup as (\r\n  props: PopupProps & React.RefAttributes<MapboxPopup>\r\n) => React.ReactElement | null;\r\n\r\ntype AttributionControlOptions = ConstructorParameters<typeof MapboxAttributionControl>[0];\r\nexport type AttributionControlProps = _AttributionControlProps<AttributionControlOptions>;\r\nexport const AttributionControl = _AttributionControl as (\r\n  props: AttributionControlProps\r\n) => React.ReactElement | null;\r\n\r\ntype FullscreenControlOptions = ConstructorParameters<typeof MapboxFullscreenControl>[0];\r\nexport type FullscreenControlProps = _FullscreenControlProps<FullscreenControlOptions>;\r\nexport const FullscreenControl = _FullscreenControl as (\r\n  props: FullscreenControlProps\r\n) => React.ReactElement | null;\r\n\r\ntype NavigationControlOptions = ConstructorParameters<typeof MapboxNavigationControl>[0];\r\nexport type NavigationControlProps = _NavigationControlProps<NavigationControlOptions>;\r\nexport const NavigationControl = _NavigationControl as (\r\n  props: NavigationControlProps\r\n) => React.ReactElement | null;\r\n\r\ntype GeolocateControlOptions = ConstructorParameters<typeof MapboxGeolocateControl>[0];\r\nexport type GeolocateControlProps = _GeolocateControlProps<\r\n  GeolocateControlOptions,\r\n  MapboxGeolocateControl\r\n>;\r\nexport const GeolocateControl = _GeolocateControl as (\r\n  props: GeolocateControlProps & React.RefAttributes<MapboxGeolocateControl>\r\n) => React.ReactElement | null;\r\n\r\ntype ScaleControlOptions = ConstructorParameters<typeof MapboxScaleControl>[0];\r\nexport type ScaleControlProps = _ScaleControlProps<ScaleControlOptions>;\r\nexport const ScaleControl = _ScaleControl as (\r\n  props: ScaleControlProps\r\n) => React.ReactElement | null;\r\n\r\nexport type LayerProps = _LayerProps<AnyLayer>;\r\nexport const Layer = _Layer as (props: LayerProps) => React.ReactElement | null;\r\n\r\nexport type SourceProps = _SourceProps<AnySource>;\r\nexport const Source = _Source as (props: SourceProps) => React.ReactElement | null;\r\n\r\nexport {default as useControl} from './components/use-control';\r\nexport {MapProvider} from './components/use-map';\r\n\r\nexport default Map;\r\n\r\n// Types\r\nexport * from './types/public';\r\nexport type {\r\n  Point,\r\n  PointLike,\r\n  LngLat,\r\n  LngLatLike,\r\n  LngLatBounds,\r\n  LngLatBoundsLike,\r\n  PaddingOptions,\r\n  MapboxGeoJSONFeature as MapGeoJSONFeature,\r\n  GeoJSONSource,\r\n  VideoSource,\r\n  ImageSource,\r\n  CanvasSource,\r\n  VectorSourceImpl as VectorTileSource\r\n} from 'mapbox-gl';\r\nexport * from './types/style-spec-mapbox';\r\n\r\n// Events\r\nexport type {\r\n  MapEvent,\r\n  MapMouseEvent,\r\n  MapLayerMouseEvent,\r\n  MapTouchEvent,\r\n  MapLayerTouchEvent,\r\n  MapStyleDataEvent,\r\n  MapSourceDataEvent,\r\n  MapWheelEvent,\r\n  MapBoxZoomEvent,\r\n  ErrorEvent,\r\n  ViewStateChangeEvent\r\n} from './types/events-mapbox';\r\nexport type PopupEvent = events.PopupEvent<MapboxPopup>;\r\nexport type MarkerEvent = events.MarkerEvent<MapboxMarker>;\r\nexport type MarkerDragEvent = events.MarkerDragEvent<MapboxMarker>;\r\nexport type GeolocateEvent = events.GeolocateEvent<MapboxGeolocateControl>;\r\nexport type GeolocateResultEvent = events.GeolocateResultEvent<MapboxGeolocateControl>;\r\nexport type GeolocateErrorEvent = events.GeolocateErrorEvent<MapboxGeolocateControl>;\r\n\r\n// v7.0 backward compatibility\r\n\r\n/** @deprecated use `MapStyle` */\r\nexport type MapboxStyle = MapStyle;\r\n\r\nexport type {Map as MapboxMap, MapboxEvent, MapboxGeoJSONFeature} from 'mapbox-gl';\r\n", "import * as React from 'react';\r\nimport {useState, useRef, useEffect, useContext, useMemo, useImperativeHandle} from 'react';\r\n\r\nimport {MountedMapsContext} from './use-map';\r\nimport Mapbox, {MapboxProps} from '../mapbox/mapbox';\r\nimport createRef, {MapRef} from '../mapbox/create-ref';\r\n\r\nimport type {CSSProperties} from 'react';\r\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\r\nimport setGlobals, {GlobalSettings} from '../utils/set-globals';\r\nimport type {MapLib, MapInstance, MapStyle, Callbacks} from '../types';\r\n\r\nexport type MapContextValue<MapT extends MapInstance = MapInstance> = {\r\n  mapLib: MapLib<MapT>;\r\n  map: MapRef<MapT>;\r\n};\r\n\r\nexport const MapContext = React.createContext<MapContextValue>(null);\r\n\r\ntype MapInitOptions<MapOptions> = Omit<\r\n  MapOptions,\r\n  'style' | 'container' | 'bounds' | 'fitBoundsOptions' | 'center'\r\n>;\r\n\r\nexport type MapProps<\r\n  MapOptions,\r\n  StyleT extends MapStyle,\r\n  CallbacksT extends Callbacks,\r\n  MapT extends MapInstance\r\n> = MapInitOptions<MapOptions> &\r\n  MapboxProps<StyleT, CallbacksT> &\r\n  GlobalSettings & {\r\n    mapLib?: MapLib<MapT> | Promise<MapLib<MapT>>;\r\n    reuseMaps?: boolean;\r\n    /** Map container id */\r\n    id?: string;\r\n    /** Map container CSS style */\r\n    style?: CSSProperties;\r\n    children?: any;\r\n  };\r\n\r\nexport default function Map<\r\n  MapOptions,\r\n  StyleT extends MapStyle,\r\n  CallbacksT extends Callbacks,\r\n  MapT extends MapInstance\r\n>(\r\n  props: MapProps<MapOptions, StyleT, CallbacksT, MapT>,\r\n  ref: React.Ref<MapRef<MapT>>,\r\n  defaultLib: MapLib<MapT> | Promise<MapLib<MapT>>\r\n) {\r\n  const mountedMapsContext = useContext(MountedMapsContext);\r\n  const [mapInstance, setMapInstance] = useState<Mapbox<StyleT, CallbacksT, MapT>>(null);\r\n  const containerRef = useRef();\r\n\r\n  const {current: contextValue} = useRef<MapContextValue<MapT>>({mapLib: null, map: null});\r\n\r\n  useEffect(() => {\r\n    const mapLib = props.mapLib;\r\n    let isMounted = true;\r\n    let mapbox: Mapbox<StyleT, CallbacksT, MapT>;\r\n\r\n    Promise.resolve(mapLib || defaultLib)\r\n      .then((module: MapLib<MapT> | {default: MapLib<MapT>}) => {\r\n        if (!isMounted) {\r\n          return;\r\n        }\r\n        if (!module) {\r\n          throw new Error('Invalid mapLib');\r\n        }\r\n        const mapboxgl = 'Map' in module ? module : module.default;\r\n        if (!mapboxgl.Map) {\r\n          throw new Error('Invalid mapLib');\r\n        }\r\n\r\n        // workerUrl & workerClass may change the result of supported()\r\n        // https://github.com/visgl/react-map-gl/discussions/2027\r\n        setGlobals(mapboxgl, props);\r\n        if (!mapboxgl.supported || mapboxgl.supported(props)) {\r\n          if (props.reuseMaps) {\r\n            mapbox = Mapbox.reuse(props, containerRef.current);\r\n          }\r\n          if (!mapbox) {\r\n            mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\r\n          }\r\n          contextValue.map = createRef(mapbox);\r\n          contextValue.mapLib = mapboxgl;\r\n\r\n          setMapInstance(mapbox);\r\n          mountedMapsContext?.onMapMount(contextValue.map, props.id);\r\n        } else {\r\n          throw new Error('Map is not supported by this browser');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        const {onError} = props;\r\n        if (onError) {\r\n          onError({\r\n            type: 'error',\r\n            target: null,\r\n            originalEvent: null,\r\n            error\r\n          });\r\n        } else {\r\n          console.error(error); // eslint-disable-line\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (mapbox) {\r\n        mountedMapsContext?.onMapUnmount(props.id);\r\n        if (props.reuseMaps) {\r\n          mapbox.recycle();\r\n        } else {\r\n          mapbox.destroy();\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (mapInstance) {\r\n      mapInstance.setProps(props);\r\n    }\r\n  });\r\n\r\n  useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\r\n\r\n  const style: CSSProperties = useMemo(\r\n    () => ({\r\n      position: 'relative',\r\n      width: '100%',\r\n      height: '100%',\r\n      ...props.style\r\n    }),\r\n    [props.style]\r\n  );\r\n\r\n  const CHILD_CONTAINER_STYLE = {\r\n    height: '100%'\r\n  };\r\n\r\n  return (\r\n    <div id={props.id} ref={containerRef} style={style}>\r\n      {mapInstance && (\r\n        <MapContext.Provider value={contextValue}>\r\n          <div mapboxgl-children=\"\" style={CHILD_CONTAINER_STYLE}>\r\n            {props.children}\r\n          </div>\r\n        </MapContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import * as React from 'react';\r\nimport {useState, useCallback, useMemo, useContext} from 'react';\r\n\r\nimport {MapRef} from '../mapbox/create-ref';\r\nimport {MapContext} from './map';\r\nimport {MapInstance} from '../types';\r\n\r\ntype MountedMapsContextValue = {\r\n  maps: {[id: string]: MapRef<MapInstance>};\r\n  onMapMount: (map: MapRef<MapInstance>, id: string) => void;\r\n  onMapUnmount: (id: string) => void;\r\n};\r\n\r\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\r\n\r\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\r\n  const [maps, setMaps] = useState<{[id: string]: MapRef<MapInstance>}>({});\r\n\r\n  const onMapMount = useCallback((map: MapRef<MapInstance>, id: string = 'default') => {\r\n    setMaps(currMaps => {\r\n      if (id === 'current') {\r\n        throw new Error(\"'current' cannot be used as map id\");\r\n      }\r\n      if (currMaps[id]) {\r\n        throw new Error(`Multiple maps with the same id: ${id}`);\r\n      }\r\n      return {...currMaps, [id]: map};\r\n    });\r\n  }, []);\r\n\r\n  const onMapUnmount = useCallback((id: string = 'default') => {\r\n    setMaps(currMaps => {\r\n      if (currMaps[id]) {\r\n        const nextMaps = {...currMaps};\r\n        delete nextMaps[id];\r\n        return nextMaps;\r\n      }\r\n      return currMaps;\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <MountedMapsContext.Provider\r\n      value={{\r\n        maps,\r\n        onMapMount,\r\n        onMapUnmount\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MountedMapsContext.Provider>\r\n  );\r\n};\r\n\r\nexport type MapCollection<MapT extends MapInstance> = {\r\n  [id: string]: MapRef<MapT> | undefined;\r\n  current?: MapRef<MapT>;\r\n};\r\n\r\nexport function useMap<MapT extends MapInstance>(): MapCollection<MapT> {\r\n  const maps = useContext(MountedMapsContext)?.maps;\r\n  const currentMap = useContext(MapContext);\r\n\r\n  const mapsWithCurrent = useMemo(() => {\r\n    return {...maps, current: currentMap?.map};\r\n  }, [maps, currentMap]);\r\n\r\n  return mapsWithCurrent as MapCollection<MapT>;\r\n}\r\n", "import type {PointLike} from '../types';\r\n\r\n/**\r\n * Compare two points\r\n * @param a\r\n * @param b\r\n * @returns true if the points are equal\r\n */\r\nexport function arePointsEqual(a?: PointLike, b?: PointLike): boolean {\r\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\r\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\r\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\r\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\r\n  return ax === bx && ay === by;\r\n}\r\n\r\n/* eslint-disable complexity */\r\n/**\r\n * Compare any two objects\r\n * @param a\r\n * @param b\r\n * @returns true if the objects are deep equal\r\n */\r\nexport function deepEqual(a: any, b: any): boolean {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (!a || !b) {\r\n    return false;\r\n  }\r\n  if (Array.isArray(a)) {\r\n    if (!Array.isArray(b) || a.length !== b.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (!deepEqual(a[i], b[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  } else if (Array.isArray(b)) {\r\n    return false;\r\n  }\r\n  if (typeof a === 'object' && typeof b === 'object') {\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    if (aKeys.length !== bKeys.length) {\r\n      return false;\r\n    }\r\n    for (const key of aKeys) {\r\n      if (!b.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n      if (!deepEqual(a[key], b[key])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n", "import type {MapboxProps} from '../mapbox/mapbox';\r\nimport type {Transform, ViewState} from '../types';\r\nimport {deepEqual} from './deep-equal';\r\n\r\n/**\r\n * Make a copy of a transform\r\n * @param tr\r\n */\r\nexport function cloneTransform(tr: Transform): Transform {\r\n  const newTransform = tr.clone();\r\n  // Work around mapbox bug - this value is not assigned in clone(), only in resize()\r\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\r\n  return newTransform;\r\n}\r\n\r\n/**\r\n * Copy projection from one transform to another. This only applies to mapbox-gl transforms\r\n * @param src the transform to copy projection settings from\r\n * @param dest to transform to copy projection settings to\r\n */\r\nexport function syncProjection(src: Transform, dest: Transform): void {\r\n  if (!src.getProjection) {\r\n    return;\r\n  }\r\n  const srcProjection = src.getProjection();\r\n  const destProjection = dest.getProjection();\r\n\r\n  if (!deepEqual(srcProjection, destProjection)) {\r\n    dest.setProjection(srcProjection);\r\n  }\r\n}\r\n\r\n/**\r\n * Capture a transform's current state\r\n * @param transform\r\n * @returns descriptor of the view state\r\n */\r\nexport function transformToViewState(tr: Transform): ViewState {\r\n  return {\r\n    longitude: tr.center.lng,\r\n    latitude: tr.center.lat,\r\n    zoom: tr.zoom,\r\n    pitch: tr.pitch,\r\n    bearing: tr.bearing,\r\n    padding: tr.padding\r\n  };\r\n}\r\n\r\n/* eslint-disable complexity */\r\n/**\r\n * Mutate a transform to match the given view state\r\n * @param transform\r\n * @param viewState\r\n * @returns true if the transform has changed\r\n */\r\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\r\n  const v: Partial<ViewState> = props.viewState || props;\r\n  let changed = false;\r\n\r\n  if ('zoom' in v) {\r\n    const zoom = tr.zoom;\r\n    tr.zoom = v.zoom;\r\n    changed = changed || zoom !== tr.zoom;\r\n  }\r\n  if ('bearing' in v) {\r\n    const bearing = tr.bearing;\r\n    tr.bearing = v.bearing;\r\n    changed = changed || bearing !== tr.bearing;\r\n  }\r\n  if ('pitch' in v) {\r\n    const pitch = tr.pitch;\r\n    tr.pitch = v.pitch;\r\n    changed = changed || pitch !== tr.pitch;\r\n  }\r\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\r\n    changed = true;\r\n    tr.padding = v.padding;\r\n  }\r\n  if ('longitude' in v && 'latitude' in v) {\r\n    const center = tr.center;\r\n    // @ts-ignore\r\n    tr.center = new center.constructor(v.longitude, v.latitude);\r\n    changed = changed || center !== tr.center;\r\n  }\r\n  return changed;\r\n}\r\n", "import {ImmutableLike, MapStyle} from '../types';\r\n\r\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\r\n\r\n// Prepare a map style object for diffing\r\n// If immutable - convert to plain object\r\n// Work around some issues in older styles that would fail Mapbox's diffing\r\nexport function normalizeStyle(\r\n  style: string | MapStyle | ImmutableLike<MapStyle>\r\n): string | MapStyle {\r\n  if (!style) {\r\n    return null;\r\n  }\r\n  if (typeof style === 'string') {\r\n    return style;\r\n  }\r\n  if ('toJS' in style) {\r\n    style = style.toJS();\r\n  }\r\n  if (!style.layers) {\r\n    return style;\r\n  }\r\n  const layerIndex = {};\r\n\r\n  for (const layer of style.layers) {\r\n    layerIndex[layer.id] = layer;\r\n  }\r\n\r\n  const layers = style.layers.map(layer => {\r\n    let normalizedLayer: typeof layer = null;\r\n\r\n    if ('interactive' in layer) {\r\n      normalizedLayer = Object.assign({}, layer);\r\n      // Breaks style diffing :(\r\n      // @ts-ignore legacy field not typed\r\n      delete normalizedLayer.interactive;\r\n    }\r\n\r\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\r\n    // @ts-ignore legacy field not typed\r\n    const layerRef = layerIndex[layer.ref];\r\n    if (layerRef) {\r\n      normalizedLayer = normalizedLayer || Object.assign({}, layer);\r\n      // @ts-ignore\r\n      delete normalizedLayer.ref;\r\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\r\n      for (const propName of refProps) {\r\n        if (propName in layerRef) {\r\n          normalizedLayer[propName] = layerRef[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    return normalizedLayer || layer;\r\n  });\r\n\r\n  // Do not mutate the style object provided by the user\r\n  return {...style, layers};\r\n}\r\n", "import {\r\n  transformToViewState,\r\n  applyViewStateToTransform,\r\n  cloneTransform,\r\n  syncProjection\r\n} from '../utils/transform';\r\nimport {normalizeStyle} from '../utils/style-utils';\r\nimport {deepEqual} from '../utils/deep-equal';\r\n\r\nimport type {\r\n  Transform,\r\n  ViewState,\r\n  ViewStateChangeEvent,\r\n  Point,\r\n  PointLike,\r\n  PaddingOptions,\r\n  MapStyle,\r\n  ImmutableLike,\r\n  LngLatBoundsLike,\r\n  Callbacks,\r\n  MapEvent,\r\n  ErrorEvent,\r\n  MapMouseEvent,\r\n  MapGeoJSONFeature,\r\n  MapInstance,\r\n  MapInstanceInternal\r\n} from '../types';\r\n\r\nexport type MapboxProps<\r\n  StyleT extends MapStyle = MapStyle,\r\n  CallbacksT extends Callbacks = {}\r\n> = Partial<ViewState> &\r\n  CallbacksT & {\r\n    // Init options\r\n    mapboxAccessToken?: string;\r\n\r\n    /** Camera options used when constructing the Map instance */\r\n    initialViewState?: Partial<ViewState> & {\r\n      /** The initial bounds of the map. If bounds is specified, it overrides longitude, latitude and zoom options. */\r\n      bounds?: LngLatBoundsLike;\r\n      /** A fitBounds options object to use only when setting the bounds option. */\r\n      fitBoundsOptions?: {\r\n        offset?: PointLike;\r\n        minZoom?: number;\r\n        maxZoom?: number;\r\n        padding?: number | PaddingOptions;\r\n      };\r\n    };\r\n\r\n    /** If provided, render into an external WebGL context */\r\n    gl?: WebGLRenderingContext;\r\n\r\n    /** For external controller to override the camera state */\r\n    viewState?: ViewState & {\r\n      width: number;\r\n      height: number;\r\n    };\r\n\r\n    // Styling\r\n\r\n    /** Mapbox style */\r\n    mapStyle?: string | StyleT | ImmutableLike<StyleT>;\r\n    /** Enable diffing when the map style changes\r\n     * @default true\r\n     */\r\n    styleDiffing?: boolean;\r\n    /** The fog property of the style. Must conform to the Fog Style Specification .\r\n     * If `undefined` is provided, removes the fog from the map. */\r\n    fog?: StyleT['fog'];\r\n    /** Light properties of the map. */\r\n    light?: StyleT['light'];\r\n    /** Terrain property of the style. Must conform to the Terrain Style Specification .\r\n     * If `undefined` is provided, removes terrain from the map. */\r\n    terrain?: StyleT['terrain'];\r\n\r\n    /** Default layers to query on pointer events */\r\n    interactiveLayerIds?: string[];\r\n    /** CSS cursor */\r\n    cursor?: string;\r\n  };\r\n\r\nconst DEFAULT_STYLE = {version: 8, sources: {}, layers: []} as MapStyle;\r\n\r\nconst pointerEvents = {\r\n  mousedown: 'onMouseDown',\r\n  mouseup: 'onMouseUp',\r\n  mouseover: 'onMouseOver',\r\n  mousemove: 'onMouseMove',\r\n  click: 'onClick',\r\n  dblclick: 'onDblClick',\r\n  mouseenter: 'onMouseEnter',\r\n  mouseleave: 'onMouseLeave',\r\n  mouseout: 'onMouseOut',\r\n  contextmenu: 'onContextMenu',\r\n  touchstart: 'onTouchStart',\r\n  touchend: 'onTouchEnd',\r\n  touchmove: 'onTouchMove',\r\n  touchcancel: 'onTouchCancel'\r\n};\r\nconst cameraEvents = {\r\n  movestart: 'onMoveStart',\r\n  move: 'onMove',\r\n  moveend: 'onMoveEnd',\r\n  dragstart: 'onDragStart',\r\n  drag: 'onDrag',\r\n  dragend: 'onDragEnd',\r\n  zoomstart: 'onZoomStart',\r\n  zoom: 'onZoom',\r\n  zoomend: 'onZoomEnd',\r\n  rotatestart: 'onRotateStart',\r\n  rotate: 'onRotate',\r\n  rotateend: 'onRotateEnd',\r\n  pitchstart: 'onPitchStart',\r\n  pitch: 'onPitch',\r\n  pitchend: 'onPitchEnd'\r\n};\r\nconst otherEvents = {\r\n  wheel: 'onWheel',\r\n  boxzoomstart: 'onBoxZoomStart',\r\n  boxzoomend: 'onBoxZoomEnd',\r\n  boxzoomcancel: 'onBoxZoomCancel',\r\n  resize: 'onResize',\r\n  load: 'onLoad',\r\n  render: 'onRender',\r\n  idle: 'onIdle',\r\n  remove: 'onRemove',\r\n  data: 'onData',\r\n  styledata: 'onStyleData',\r\n  sourcedata: 'onSourceData',\r\n  error: 'onError'\r\n};\r\nconst settingNames = [\r\n  'minZoom',\r\n  'maxZoom',\r\n  'minPitch',\r\n  'maxPitch',\r\n  'maxBounds',\r\n  'projection',\r\n  'renderWorldCopies'\r\n];\r\nconst handlerNames = [\r\n  'scrollZoom',\r\n  'boxZoom',\r\n  'dragRotate',\r\n  'dragPan',\r\n  'keyboard',\r\n  'doubleClickZoom',\r\n  'touchZoomRotate',\r\n  'touchPitch'\r\n];\r\n\r\n/**\r\n * A wrapper for mapbox-gl's Map class\r\n */\r\nexport default class Mapbox<\r\n  StyleT extends MapStyle = MapStyle,\r\n  CallbacksT extends Callbacks = {},\r\n  MapT extends MapInstance = MapInstance\r\n> {\r\n  private _MapClass: {new (options: any): MapInstance};\r\n  // mapboxgl.Map instance\r\n  private _map: MapInstanceInternal<MapT> = null;\r\n  // User-supplied props\r\n  props: MapboxProps<StyleT, CallbacksT>;\r\n\r\n  // Mapbox map is stateful.\r\n  // During method calls/user interactions, map.transform is mutated and\r\n  // deviate from user-supplied props.\r\n  // In order to control the map reactively, we shadow the transform\r\n  // with the one below, which reflects the view state resolved from\r\n  // both user-supplied props and the underlying state\r\n  private _renderTransform: Transform;\r\n\r\n  // Internal states\r\n  private _internalUpdate: boolean = false;\r\n  private _inRender: boolean = false;\r\n  private _hoveredFeatures: MapGeoJSONFeature[] = null;\r\n  private _deferredEvents: {\r\n    move: boolean;\r\n    zoom: boolean;\r\n    pitch: boolean;\r\n    rotate: boolean;\r\n  } = {\r\n    move: false,\r\n    zoom: false,\r\n    pitch: false,\r\n    rotate: false\r\n  };\r\n\r\n  static savedMaps: Mapbox[] = [];\r\n\r\n  constructor(\r\n    MapClass: {new (options: any): MapInstance},\r\n    props: MapboxProps<StyleT, CallbacksT>,\r\n    container: HTMLDivElement\r\n  ) {\r\n    this._MapClass = MapClass;\r\n    this.props = props;\r\n    this._initialize(container);\r\n  }\r\n\r\n  get map(): MapT {\r\n    return this._map;\r\n  }\r\n\r\n  get transform(): Transform {\r\n    return this._renderTransform;\r\n  }\r\n\r\n  setProps(props: MapboxProps<StyleT, CallbacksT>) {\r\n    const oldProps = this.props;\r\n    this.props = props;\r\n\r\n    const settingsChanged = this._updateSettings(props, oldProps);\r\n    if (settingsChanged) {\r\n      this._createShadowTransform(this._map);\r\n    }\r\n    const sizeChanged = this._updateSize(props);\r\n    const viewStateChanged = this._updateViewState(props, true);\r\n    this._updateStyle(props, oldProps);\r\n    this._updateStyleComponents(props, oldProps);\r\n    this._updateHandlers(props, oldProps);\r\n\r\n    // If 1) view state has changed to match props and\r\n    //    2) the props change is not triggered by map events,\r\n    // it's driven by an external state change. Redraw immediately\r\n    if (settingsChanged || sizeChanged || (viewStateChanged && !this._map.isMoving())) {\r\n      this.redraw();\r\n    }\r\n  }\r\n\r\n  static reuse<StyleT extends MapStyle, CallbacksT extends Callbacks, MapT extends MapInstance>(\r\n    props: MapboxProps<StyleT, CallbacksT>,\r\n    container: HTMLDivElement\r\n  ): Mapbox<StyleT, CallbacksT, MapT> {\r\n    const that = Mapbox.savedMaps.pop() as Mapbox<StyleT, CallbacksT, MapT>;\r\n    if (!that) {\r\n      return null;\r\n    }\r\n\r\n    const map = that.map;\r\n    // When reusing the saved map, we need to reparent the map(canvas) and other child nodes\r\n    // intoto the new container from the props.\r\n    // Step 1: reparenting child nodes from old container to new container\r\n    const oldContainer = map.getContainer();\r\n    container.className = oldContainer.className;\r\n    while (oldContainer.childNodes.length > 0) {\r\n      container.appendChild(oldContainer.childNodes[0]);\r\n    }\r\n    // Step 2: replace the internal container with new container from the react component\r\n    // @ts-ignore\r\n    map._container = container;\r\n\r\n    // With maplibre-gl as mapLib, map uses ResizeObserver to observe when its container resizes.\r\n    // When reusing the saved map, we need to disconnect the observer and observe the new container.\r\n    // Step 3: telling the ResizeObserver to disconnect and observe the new container\r\n    // @ts-ignore\r\n    const resizeObserver = map._resizeObserver;\r\n    if (resizeObserver) {\r\n      resizeObserver.disconnect();\r\n      resizeObserver.observe(container);\r\n    }\r\n\r\n    // Step 4: apply new props\r\n    that.setProps({...props, styleDiffing: false});\r\n    map.resize();\r\n    const {initialViewState} = props;\r\n    if (initialViewState) {\r\n      if (initialViewState.bounds) {\r\n        map.fitBounds(initialViewState.bounds, {...initialViewState.fitBoundsOptions, duration: 0});\r\n      } else {\r\n        that._updateViewState(initialViewState, false);\r\n      }\r\n    }\r\n\r\n    // Simulate load event\r\n    if (map.isStyleLoaded()) {\r\n      map.fire('load');\r\n    } else {\r\n      map.once('styledata', () => map.fire('load'));\r\n    }\r\n\r\n    // Force reload\r\n    // @ts-ignore\r\n    map._update();\r\n    return that;\r\n  }\r\n\r\n  /* eslint-disable complexity,max-statements */\r\n  _initialize(container: HTMLDivElement) {\r\n    const {props} = this;\r\n    const {mapStyle = DEFAULT_STYLE} = props;\r\n    const mapOptions = {\r\n      ...props,\r\n      ...props.initialViewState,\r\n      accessToken: props.mapboxAccessToken || getAccessTokenFromEnv() || null,\r\n      container,\r\n      style: normalizeStyle(mapStyle)\r\n    };\r\n\r\n    const viewState = mapOptions.initialViewState || mapOptions.viewState || mapOptions;\r\n    Object.assign(mapOptions, {\r\n      center: [viewState.longitude || 0, viewState.latitude || 0],\r\n      zoom: viewState.zoom || 0,\r\n      pitch: viewState.pitch || 0,\r\n      bearing: viewState.bearing || 0\r\n    });\r\n\r\n    if (props.gl) {\r\n      // eslint-disable-next-line\r\n      const getContext = HTMLCanvasElement.prototype.getContext;\r\n      // Hijack canvas.getContext to return our own WebGLContext\r\n      // This will be called inside the mapboxgl.Map constructor\r\n      // @ts-expect-error\r\n      HTMLCanvasElement.prototype.getContext = () => {\r\n        // Unhijack immediately\r\n        HTMLCanvasElement.prototype.getContext = getContext;\r\n        return props.gl;\r\n      };\r\n    }\r\n\r\n    const map = new this._MapClass(mapOptions) as MapInstanceInternal<MapT>;\r\n    // Props that are not part of constructor options\r\n    if (viewState.padding) {\r\n      map.setPadding(viewState.padding);\r\n    }\r\n    if (props.cursor) {\r\n      map.getCanvas().style.cursor = props.cursor;\r\n    }\r\n    this._createShadowTransform(map);\r\n\r\n    // Hack\r\n    // Insert code into map's render cycle\r\n    const renderMap = map._render;\r\n    map._render = (arg: number) => {\r\n      this._inRender = true;\r\n      renderMap.call(map, arg);\r\n      this._inRender = false;\r\n    };\r\n    const runRenderTaskQueue = map._renderTaskQueue.run;\r\n    map._renderTaskQueue.run = (arg: number) => {\r\n      runRenderTaskQueue.call(map._renderTaskQueue, arg);\r\n      this._onBeforeRepaint();\r\n    };\r\n    map.on('render', () => this._onAfterRepaint());\r\n    // Insert code into map's event pipeline\r\n    // eslint-disable-next-line @typescript-eslint/unbound-method\r\n    const fireEvent = map.fire;\r\n    map.fire = this._fireEvent.bind(this, fireEvent);\r\n\r\n    // add listeners\r\n    map.on('resize', () => {\r\n      this._renderTransform.resize(map.transform.width, map.transform.height);\r\n    });\r\n    map.on('styledata', () => {\r\n      this._updateStyleComponents(this.props, {});\r\n      // Projection can be set in stylesheet\r\n      syncProjection(map.transform, this._renderTransform);\r\n    });\r\n    map.on('sourcedata', () => this._updateStyleComponents(this.props, {}));\r\n    for (const eventName in pointerEvents) {\r\n      map.on(eventName, this._onPointerEvent);\r\n    }\r\n    for (const eventName in cameraEvents) {\r\n      map.on(eventName, this._onCameraEvent);\r\n    }\r\n    for (const eventName in otherEvents) {\r\n      map.on(eventName, this._onEvent);\r\n    }\r\n    this._map = map;\r\n  }\r\n  /* eslint-enable complexity,max-statements */\r\n\r\n  recycle() {\r\n    // Clean up unnecessary elements before storing for reuse.\r\n    const container = this.map.getContainer();\r\n    const children = container.querySelector('[mapboxgl-children]');\r\n    children?.remove();\r\n\r\n    Mapbox.savedMaps.push(this);\r\n  }\r\n\r\n  destroy() {\r\n    this._map.remove();\r\n  }\r\n\r\n  // Force redraw the map now. Typically resize() and jumpTo() is reflected in the next\r\n  // render cycle, which is managed by Mapbox's animation loop.\r\n  // This removes the synchronization issue caused by requestAnimationFrame.\r\n  redraw() {\r\n    const map = this._map as any;\r\n    // map._render will throw error if style does not exist\r\n    // https://github.com/mapbox/mapbox-gl-js/blob/fb9fc316da14e99ff4368f3e4faa3888fb43c513\r\n    //   /src/ui/map.js#L1834\r\n    if (!this._inRender && map.style) {\r\n      // cancel the scheduled update\r\n      if (map._frame) {\r\n        map._frame.cancel();\r\n        map._frame = null;\r\n      }\r\n      // the order is important - render() may schedule another update\r\n      map._render();\r\n    }\r\n  }\r\n\r\n  _createShadowTransform(map: any) {\r\n    const renderTransform = cloneTransform(map.transform);\r\n    map.painter.transform = renderTransform;\r\n\r\n    this._renderTransform = renderTransform;\r\n  }\r\n\r\n  /* Trigger map resize if size is controlled\r\n     @param {object} nextProps\r\n     @returns {bool} true if size has changed\r\n   */\r\n  _updateSize(nextProps: MapboxProps<StyleT>): boolean {\r\n    // Check if size is controlled\r\n    const {viewState} = nextProps;\r\n    if (viewState) {\r\n      const map = this._map;\r\n      if (viewState.width !== map.transform.width || viewState.height !== map.transform.height) {\r\n        map.resize();\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Adapted from map.jumpTo\r\n  /* Update camera to match props\r\n     @param {object} nextProps\r\n     @param {bool} triggerEvents - should fire camera events\r\n     @returns {bool} true if anything is changed\r\n   */\r\n  _updateViewState(nextProps: MapboxProps<StyleT>, triggerEvents: boolean): boolean {\r\n    if (this._internalUpdate) {\r\n      return false;\r\n    }\r\n    const map = this._map;\r\n\r\n    const tr = this._renderTransform;\r\n    // Take a snapshot of the transform before mutation\r\n    const {zoom, pitch, bearing} = tr;\r\n    const isMoving = map.isMoving();\r\n\r\n    if (isMoving) {\r\n      // All movement of the camera is done relative to the sea level\r\n      tr.cameraElevationReference = 'sea';\r\n    }\r\n    const changed = applyViewStateToTransform(tr, {\r\n      ...transformToViewState(map.transform),\r\n      ...nextProps\r\n    });\r\n    if (isMoving) {\r\n      // Reset camera reference\r\n      tr.cameraElevationReference = 'ground';\r\n    }\r\n\r\n    if (changed && triggerEvents) {\r\n      const deferredEvents = this._deferredEvents;\r\n      // Delay DOM control updates to the next render cycle\r\n      deferredEvents.move = true;\r\n      deferredEvents.zoom ||= zoom !== tr.zoom;\r\n      deferredEvents.rotate ||= bearing !== tr.bearing;\r\n      deferredEvents.pitch ||= pitch !== tr.pitch;\r\n    }\r\n\r\n    // Avoid manipulating the real transform when interaction/animation is ongoing\r\n    // as it would interfere with Mapbox's handlers\r\n    if (!isMoving) {\r\n      applyViewStateToTransform(map.transform, nextProps);\r\n    }\r\n\r\n    return changed;\r\n  }\r\n\r\n  /* Update camera constraints and projection settings to match props\r\n     @param {object} nextProps\r\n     @param {object} currProps\r\n     @returns {bool} true if anything is changed\r\n   */\r\n  _updateSettings(nextProps: MapboxProps<StyleT>, currProps: MapboxProps<StyleT>): boolean {\r\n    const map = this._map;\r\n    let changed = false;\r\n    for (const propName of settingNames) {\r\n      if (propName in nextProps && !deepEqual(nextProps[propName], currProps[propName])) {\r\n        changed = true;\r\n        const setter = map[`set${propName[0].toUpperCase()}${propName.slice(1)}`];\r\n        setter?.call(map, nextProps[propName]);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n\r\n  /* Update map style to match props\r\n     @param {object} nextProps\r\n     @param {object} currProps\r\n     @returns {bool} true if style is changed\r\n   */\r\n  _updateStyle(nextProps: MapboxProps<StyleT>, currProps: MapboxProps<StyleT>): boolean {\r\n    if (nextProps.cursor !== currProps.cursor) {\r\n      this._map.getCanvas().style.cursor = nextProps.cursor || '';\r\n    }\r\n    if (nextProps.mapStyle !== currProps.mapStyle) {\r\n      const {mapStyle = DEFAULT_STYLE, styleDiffing = true} = nextProps;\r\n      const options: any = {\r\n        diff: styleDiffing\r\n      };\r\n      if ('localIdeographFontFamily' in nextProps) {\r\n        // @ts-ignore Mapbox specific prop\r\n        options.localIdeographFontFamily = nextProps.localIdeographFontFamily;\r\n      }\r\n      this._map.setStyle(normalizeStyle(mapStyle), options);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /* Update fog, light and terrain to match props\r\n     @param {object} nextProps\r\n     @param {object} currProps\r\n     @returns {bool} true if anything is changed\r\n   */\r\n  _updateStyleComponents(nextProps: MapboxProps<StyleT>, currProps: MapboxProps<StyleT>): boolean {\r\n    const map = this._map;\r\n    let changed = false;\r\n    if (map.isStyleLoaded()) {\r\n      if ('light' in nextProps && map.setLight && !deepEqual(nextProps.light, currProps.light)) {\r\n        changed = true;\r\n        map.setLight(nextProps.light);\r\n      }\r\n      if ('fog' in nextProps && map.setFog && !deepEqual(nextProps.fog, currProps.fog)) {\r\n        changed = true;\r\n        map.setFog(nextProps.fog);\r\n      }\r\n      if (\r\n        'terrain' in nextProps &&\r\n        map.setTerrain &&\r\n        !deepEqual(nextProps.terrain, currProps.terrain)\r\n      ) {\r\n        if (!nextProps.terrain || map.getSource(nextProps.terrain.source)) {\r\n          changed = true;\r\n          map.setTerrain(nextProps.terrain);\r\n        }\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n\r\n  /* Update interaction handlers to match props\r\n     @param {object} nextProps\r\n     @param {object} currProps\r\n     @returns {bool} true if anything is changed\r\n   */\r\n  _updateHandlers(nextProps: MapboxProps<StyleT>, currProps: MapboxProps<StyleT>): boolean {\r\n    const map = this._map;\r\n    let changed = false;\r\n    for (const propName of handlerNames) {\r\n      const newValue = nextProps[propName] ?? true;\r\n      const oldValue = currProps[propName] ?? true;\r\n      if (!deepEqual(newValue, oldValue)) {\r\n        changed = true;\r\n        if (newValue) {\r\n          map[propName].enable(newValue);\r\n        } else {\r\n          map[propName].disable();\r\n        }\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n\r\n  _onEvent = (e: MapEvent<MapT>) => {\r\n    // @ts-ignore\r\n    const cb = this.props[otherEvents[e.type]];\r\n    if (cb) {\r\n      cb(e);\r\n    } else if (e.type === 'error') {\r\n      console.error((e as ErrorEvent<MapT>).error); // eslint-disable-line\r\n    }\r\n  };\r\n\r\n  private _queryRenderedFeatures(point: Point) {\r\n    const map = this._map;\r\n    const tr = map.transform;\r\n    const {interactiveLayerIds = []} = this.props;\r\n    try {\r\n      map.transform = this._renderTransform;\r\n      return map.queryRenderedFeatures(point, {\r\n        layers: interactiveLayerIds.filter(map.getLayer.bind(map))\r\n      });\r\n    } catch {\r\n      // May fail if style is not loaded\r\n      return [];\r\n    } finally {\r\n      map.transform = tr;\r\n    }\r\n  }\r\n\r\n  _updateHover(e: MapMouseEvent<MapT>) {\r\n    const {props} = this;\r\n    const shouldTrackHoveredFeatures =\r\n      props.interactiveLayerIds && (props.onMouseMove || props.onMouseEnter || props.onMouseLeave);\r\n\r\n    if (shouldTrackHoveredFeatures) {\r\n      const eventType = e.type;\r\n      const wasHovering = this._hoveredFeatures?.length > 0;\r\n      const features = this._queryRenderedFeatures(e.point);\r\n      const isHovering = features.length > 0;\r\n\r\n      if (!isHovering && wasHovering) {\r\n        e.type = 'mouseleave';\r\n        this._onPointerEvent(e);\r\n      }\r\n      this._hoveredFeatures = features;\r\n      if (isHovering && !wasHovering) {\r\n        e.type = 'mouseenter';\r\n        this._onPointerEvent(e);\r\n      }\r\n      e.type = eventType;\r\n    } else {\r\n      this._hoveredFeatures = null;\r\n    }\r\n  }\r\n\r\n  _onPointerEvent = (e: MapMouseEvent<MapT> | MapMouseEvent<MapT>) => {\r\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\r\n      this._updateHover(e);\r\n    }\r\n\r\n    // @ts-ignore\r\n    const cb = this.props[pointerEvents[e.type]];\r\n    if (cb) {\r\n      if (this.props.interactiveLayerIds && e.type !== 'mouseover' && e.type !== 'mouseout') {\r\n        e.features = this._hoveredFeatures || this._queryRenderedFeatures(e.point);\r\n      }\r\n      cb(e);\r\n      delete e.features;\r\n    }\r\n  };\r\n\r\n  _onCameraEvent = (e: ViewStateChangeEvent<MapT>) => {\r\n    if (!this._internalUpdate) {\r\n      // @ts-ignore\r\n      const cb = this.props[cameraEvents[e.type]];\r\n      if (cb) {\r\n        cb(e);\r\n      }\r\n    }\r\n    if (e.type in this._deferredEvents) {\r\n      this._deferredEvents[e.type] = false;\r\n    }\r\n  };\r\n\r\n  _fireEvent(baseFire: Function, event: string | MapEvent<MapT>, properties?: object) {\r\n    const map = this._map;\r\n    const tr = map.transform;\r\n\r\n    const eventType = typeof event === 'string' ? event : event.type;\r\n    if (eventType === 'move') {\r\n      this._updateViewState(this.props, false);\r\n    }\r\n    if (eventType in cameraEvents) {\r\n      if (typeof event === 'object') {\r\n        (event as unknown as ViewStateChangeEvent<MapT>).viewState = transformToViewState(tr);\r\n      }\r\n      if (this._map.isMoving()) {\r\n        // Replace map.transform with ours during the callbacks\r\n        map.transform = this._renderTransform;\r\n        baseFire.call(map, event, properties);\r\n        map.transform = tr;\r\n\r\n        return map;\r\n      }\r\n    }\r\n    baseFire.call(map, event, properties);\r\n\r\n    return map;\r\n  }\r\n\r\n  // All camera manipulations are complete, ready to repaint\r\n  _onBeforeRepaint() {\r\n    const map = this._map;\r\n\r\n    // If there are camera changes driven by props, invoke camera events so that DOM controls are synced\r\n    this._internalUpdate = true;\r\n    for (const eventType in this._deferredEvents) {\r\n      if (this._deferredEvents[eventType]) {\r\n        map.fire(eventType);\r\n      }\r\n    }\r\n    this._internalUpdate = false;\r\n\r\n    const tr = this._map.transform;\r\n    // Make sure camera matches the current props\r\n    map.transform = this._renderTransform;\r\n\r\n    this._onAfterRepaint = () => {\r\n      // Mapbox transitions between non-mercator projection and mercator during render time\r\n      // Copy it back to the other\r\n      syncProjection(this._renderTransform, tr);\r\n      // Restores camera state before render/load events are fired\r\n      map.transform = tr;\r\n    };\r\n  }\r\n\r\n  _onAfterRepaint: () => void;\r\n}\r\n\r\n/**\r\n * Access token can be provided via one of:\r\n *   mapboxAccessToken prop\r\n *   access_token query parameter\r\n *   MapboxAccessToken environment variable\r\n *   REACT_APP_MAPBOX_ACCESS_TOKEN environment variable\r\n * @returns access token\r\n */\r\nfunction getAccessTokenFromEnv(): string {\r\n  let accessToken = null;\r\n\r\n  /* global location, process */\r\n  if (typeof location !== 'undefined') {\r\n    const match = /access_token=([^&\\/]*)/.exec(location.search);\r\n    accessToken = match && match[1];\r\n  }\r\n\r\n  // Note: This depends on bundler plugins (e.g. webpack) importing environment correctly\r\n  try {\r\n    accessToken = accessToken || process.env.MapboxAccessToken;\r\n  } catch {\r\n    // ignore\r\n  }\r\n\r\n  try {\r\n    accessToken = accessToken || process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\r\n  } catch {\r\n    // ignore\r\n  }\r\n\r\n  return accessToken;\r\n}\r\n", "import type {\r\n  MapInstance,\r\n  MapInstanceInternal,\r\n  MapStyle,\r\n  Callbacks,\r\n  LngLatLike,\r\n  PointLike\r\n} from '../types';\r\nimport type Mapbox from './mapbox';\r\n\r\n/** These methods may break the react binding if called directly */\r\nconst skipMethods = [\r\n  'setMaxBounds',\r\n  'setMinZoom',\r\n  'setMaxZoom',\r\n  'setMinPitch',\r\n  'setMaxPitch',\r\n  'setRenderWorldCopies',\r\n  'setProjection',\r\n  'setStyle',\r\n  'addSource',\r\n  'removeSource',\r\n  'addLayer',\r\n  'removeLayer',\r\n  'setLayerZoomRange',\r\n  'setFilter',\r\n  'setPaintProperty',\r\n  'setLayoutProperty',\r\n  'setLight',\r\n  'setTerrain',\r\n  'setFog',\r\n  'remove'\r\n] as const;\r\n\r\nexport type MapRef<MapT extends MapInstance> = {\r\n  getMap(): MapT;\r\n} & Omit<MapT, typeof skipMethods[number]>;\r\n\r\nexport default function createRef<\r\n  StyleT extends MapStyle,\r\n  CallbacksT extends Callbacks,\r\n  MapT extends MapInstance\r\n>(mapInstance: Mapbox<StyleT, CallbacksT, MapT>): MapRef<MapT> | null {\r\n  if (!mapInstance) {\r\n    return null;\r\n  }\r\n\r\n  const map = mapInstance.map as MapInstanceInternal<MapT>;\r\n  const result: any = {\r\n    getMap: () => map,\r\n\r\n    // Overwrite getters to use our shadow transform\r\n    getCenter: () => mapInstance.transform.center,\r\n    getZoom: () => mapInstance.transform.zoom,\r\n    getBearing: () => mapInstance.transform.bearing,\r\n    getPitch: () => mapInstance.transform.pitch,\r\n    getPadding: () => mapInstance.transform.padding,\r\n    getBounds: () => mapInstance.transform.getBounds(),\r\n    project: (lnglat: LngLatLike) => {\r\n      const tr = map.transform;\r\n      map.transform = mapInstance.transform;\r\n      const result = map.project(lnglat);\r\n      map.transform = tr;\r\n      return result;\r\n    },\r\n    unproject: (point: PointLike) => {\r\n      const tr = map.transform;\r\n      map.transform = mapInstance.transform;\r\n      const result = map.unproject(point);\r\n      map.transform = tr;\r\n      return result;\r\n    },\r\n    // options diverge between mapbox and maplibre\r\n    queryTerrainElevation: (lnglat: LngLatLike, options?: any) => {\r\n      const tr = map.transform;\r\n      map.transform = mapInstance.transform;\r\n      const result = map.queryTerrainElevation(lnglat, options);\r\n      map.transform = tr;\r\n      return result;\r\n    },\r\n    queryRenderedFeatures: (geometry?: any, options?: any) => {\r\n      const tr = map.transform;\r\n      map.transform = mapInstance.transform;\r\n      const result = map.queryRenderedFeatures(geometry, options);\r\n      map.transform = tr;\r\n      return result;\r\n    }\r\n  };\r\n\r\n  for (const key of getMethodNames(map)) {\r\n    // @ts-expect-error\r\n    if (!(key in result) && !skipMethods.includes(key)) {\r\n      result[key] = map[key].bind(map);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction getMethodNames(obj: Object) {\r\n  const result = new Set<string>();\r\n\r\n  let proto = obj;\r\n  while (proto) {\r\n    for (const key of Object.getOwnPropertyNames(proto)) {\r\n      if (\r\n        key[0] !== '_' &&\r\n        typeof obj[key] === 'function' &&\r\n        key !== 'fire' &&\r\n        key !== 'setEventedParent'\r\n      ) {\r\n        result.add(key);\r\n      }\r\n    }\r\n    proto = Object.getPrototypeOf(proto);\r\n  }\r\n  return Array.from(result);\r\n}\r\n", "// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\r\n// useLayoutEffect but does not trigger warning in server-side rendering\r\nimport {useEffect, useLayoutEffect} from 'react';\r\n\r\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\r\n\r\nexport default useIsomorphicLayoutEffect;\r\n", "export type GlobalSettings = {\r\n  /** The map's default API URL for requesting tiles, styles, sprites, and glyphs. */\r\n  baseApiUrl?: string;\r\n  /** The maximum number of images (raster tiles, sprites, icons) to load in parallel.\r\n   * @default 16\r\n   */\r\n  maxParallelImageRequests?: number;\r\n  /** The map's RTL text plugin. Necessary for supporting the Arabic and Hebrew languages, which are written right-to-left.  */\r\n  RTLTextPlugin?: string | false;\r\n  /** Provides an interface for external module bundlers such as Webpack or Rollup to package mapbox-gl's WebWorker into a separate class and integrate it with the library.\r\nTakes precedence over `workerUrl`. */\r\n  workerClass?: any;\r\n  /** The number of web workers instantiated on a page with mapbox-gl maps.\r\n   * @default 2\r\n   */\r\n  workerCount?: number;\r\n  /** Provides an interface for loading mapbox-gl's WebWorker bundle from a self-hosted URL.\r\n   * This is useful if your site needs to operate in a strict CSP (Content Security Policy) environment\r\n   * wherein you are not allowed to load JavaScript code from a Blob URL, which is default behavior. */\r\n  workerUrl?: string;\r\n};\r\n\r\nconst globalSettings = [\r\n  'baseApiUrl',\r\n  'maxParallelImageRequests',\r\n  'workerClass',\r\n  'workerCount',\r\n  'workerUrl'\r\n] as const;\r\n\r\nexport default function setGlobals(mapLib: any, props: GlobalSettings) {\r\n  for (const key of globalSettings) {\r\n    if (key in props) {\r\n      mapLib[key] = props[key];\r\n    }\r\n  }\r\n\r\n  const {\r\n    RTLTextPlugin = 'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\r\n  } = props;\r\n  if (\r\n    RTLTextPlugin &&\r\n    mapLib.getRTLTextPluginStatus &&\r\n    mapLib.getRTLTextPluginStatus() === 'unavailable'\r\n  ) {\r\n    mapLib.setRTLTextPlugin(\r\n      RTLTextPlugin,\r\n      (error?: Error) => {\r\n        if (error) {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n        }\r\n      },\r\n      true\r\n    );\r\n  }\r\n}\r\n", "/* global document */\r\nimport * as React from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport {useImperativeHandle, useEffect, useMemo, useRef, useContext, forwardRef, memo} from 'react';\r\nimport {applyReactStyle} from '../utils/apply-react-style';\r\n\r\nimport type {MarkerEvent, MarkerDragEvent, PointLike, MarkerInstance} from '../types';\r\n\r\nimport {MapContext} from './map';\r\nimport {arePointsEqual} from '../utils/deep-equal';\r\n\r\nexport type MarkerProps<OptionsT, MarkerT extends MarkerInstance> = OptionsT & {\r\n  /** Longitude of the anchor location */\r\n  longitude: number;\r\n  /** Latitude of the anchor location */\r\n  latitude: number;\r\n\r\n  // These types will be further constraint by OptionsT\r\n  draggable?: boolean;\r\n  offset?: PointLike;\r\n  pitchAlignment?: string;\r\n  rotation?: number;\r\n  rotationAlignment?: string;\r\n  popup?: any;\r\n\r\n  /** CSS style override, applied to the control's container */\r\n  style?: React.CSSProperties;\r\n  onClick?: (e: MarkerEvent<MarkerT, MouseEvent>) => void;\r\n  onDragStart?: (e: MarkerDragEvent<MarkerT>) => void;\r\n  onDrag?: (e: MarkerDragEvent<MarkerT>) => void;\r\n  onDragEnd?: (e: MarkerDragEvent<MarkerT>) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\n/* eslint-disable complexity,max-statements */\r\nfunction Marker<MarkerOptions, MarkerT extends MarkerInstance>(\r\n  props: MarkerProps<MarkerOptions, MarkerT>,\r\n  ref: React.Ref<MarkerT>\r\n) {\r\n  const {map, mapLib} = useContext(MapContext);\r\n  const thisRef = useRef({props});\r\n  thisRef.current.props = props;\r\n\r\n  const marker: MarkerT = useMemo(() => {\r\n    let hasChildren = false;\r\n    React.Children.forEach(props.children, el => {\r\n      if (el) {\r\n        hasChildren = true;\r\n      }\r\n    });\r\n    const options = {\r\n      ...props,\r\n      element: hasChildren ? document.createElement('div') : null\r\n    };\r\n\r\n    const mk = new mapLib.Marker(options) as MarkerT;\r\n    mk.setLngLat([props.longitude, props.latitude]);\r\n\r\n    mk.getElement().addEventListener('click', (e: MouseEvent) => {\r\n      thisRef.current.props.onClick?.({\r\n        type: 'click',\r\n        target: mk,\r\n        originalEvent: e\r\n      });\r\n    });\r\n\r\n    mk.on('dragstart', e => {\r\n      const evt = e as MarkerDragEvent<MarkerT>;\r\n      evt.lngLat = marker.getLngLat();\r\n      thisRef.current.props.onDragStart?.(evt);\r\n    });\r\n    mk.on('drag', e => {\r\n      const evt = e as MarkerDragEvent<MarkerT>;\r\n      evt.lngLat = marker.getLngLat();\r\n      thisRef.current.props.onDrag?.(evt);\r\n    });\r\n    mk.on('dragend', e => {\r\n      const evt = e as MarkerDragEvent<MarkerT>;\r\n      evt.lngLat = marker.getLngLat();\r\n      thisRef.current.props.onDragEnd?.(evt);\r\n    });\r\n\r\n    return mk;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    marker.addTo(map.getMap());\r\n\r\n    return () => {\r\n      marker.remove();\r\n    };\r\n  }, []);\r\n\r\n  const {\r\n    longitude,\r\n    latitude,\r\n    offset,\r\n    style,\r\n    draggable = false,\r\n    popup = null,\r\n    rotation = 0,\r\n    rotationAlignment = 'auto',\r\n    pitchAlignment = 'auto'\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    applyReactStyle(marker.getElement(), style);\r\n  }, [style]);\r\n\r\n  useImperativeHandle(ref, () => marker, []);\r\n\r\n  if (marker.getLngLat().lng !== longitude || marker.getLngLat().lat !== latitude) {\r\n    marker.setLngLat([longitude, latitude]);\r\n  }\r\n  if (offset && !arePointsEqual(marker.getOffset(), offset)) {\r\n    marker.setOffset(offset);\r\n  }\r\n  if (marker.isDraggable() !== draggable) {\r\n    marker.setDraggable(draggable);\r\n  }\r\n  if (marker.getRotation() !== rotation) {\r\n    marker.setRotation(rotation);\r\n  }\r\n  if (marker.getRotationAlignment() !== rotationAlignment) {\r\n    marker.setRotationAlignment(rotationAlignment);\r\n  }\r\n  if (marker.getPitchAlignment() !== pitchAlignment) {\r\n    marker.setPitchAlignment(pitchAlignment);\r\n  }\r\n  if (marker.getPopup() !== popup) {\r\n    marker.setPopup(popup);\r\n  }\r\n\r\n  return createPortal(props.children, marker.getElement());\r\n}\r\n\r\nexport default memo(forwardRef(Marker));\r\n", "import * as React from 'react';\r\n// This is a simplified version of\r\n// https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSPropertyOperations.js#L62\r\nconst unitlessNumber = /box|flex|grid|column|lineHeight|fontWeight|opacity|order|tabSize|zIndex/;\r\n\r\nexport function applyReactStyle(element: HTMLElement, styles: React.CSSProperties) {\r\n  if (!element || !styles) {\r\n    return;\r\n  }\r\n  const style = element.style;\r\n\r\n  for (const key in styles) {\r\n    const value = styles[key];\r\n    if (Number.isFinite(value) && !unitlessNumber.test(key)) {\r\n      style[key] = `${value}px`;\r\n    } else {\r\n      style[key] = value;\r\n    }\r\n  }\r\n}\r\n", "/* global document */\r\nimport * as React from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport {useImperativeHandle, useEffect, useMemo, useRef, useContext, forwardRef, memo} from 'react';\r\nimport {applyReactStyle} from '../utils/apply-react-style';\r\n\r\nimport type {PopupEvent, PopupInstance} from '../types';\r\n\r\nimport {MapContext} from './map';\r\nimport {deepEqual} from '../utils/deep-equal';\r\n\r\nexport type PopupProps<OptionsT, PopupT extends PopupInstance> = OptionsT & {\r\n  /** Longitude of the anchor location */\r\n  longitude: number;\r\n  /** Latitude of the anchor location */\r\n  latitude: number;\r\n\r\n  // These types will be further constraint by OptionsT\r\n  anchor?: string;\r\n  offset?: any;\r\n  className?: string;\r\n  maxWidth?: string;\r\n\r\n  /** CSS style override, applied to the control's container */\r\n  style?: React.CSSProperties;\r\n\r\n  onOpen?: (e: PopupEvent<PopupT>) => void;\r\n  onClose?: (e: PopupEvent<PopupT>) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\n// Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\r\nfunction getClassList(className: string) {\r\n  return new Set(className ? className.trim().split(/\\s+/) : []);\r\n}\r\n\r\n/* eslint-disable complexity,max-statements */\r\nfunction Popup<PopupOptions, PopupT extends PopupInstance>(\r\n  props: PopupProps<PopupOptions, PopupT>,\r\n  ref: React.Ref<PopupT>\r\n) {\r\n  const {map, mapLib} = useContext(MapContext);\r\n  const container = useMemo(() => {\r\n    return document.createElement('div');\r\n  }, []);\r\n  const thisRef = useRef({props});\r\n  thisRef.current.props = props;\r\n\r\n  const popup: PopupT = useMemo(() => {\r\n    const options = {...props};\r\n    const pp = new mapLib.Popup(options) as PopupT;\r\n    pp.setLngLat([props.longitude, props.latitude]);\r\n    pp.once('open', e => {\r\n      thisRef.current.props.onOpen?.(e as PopupEvent<PopupT>);\r\n    });\r\n    return pp;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const onClose = e => {\r\n      thisRef.current.props.onClose?.(e as PopupEvent<PopupT>);\r\n    };\r\n    popup.on('close', onClose);\r\n    popup.setDOMContent(container).addTo(map.getMap());\r\n\r\n    return () => {\r\n      // https://github.com/visgl/react-map-gl/issues/1825\r\n      // onClose should not be fired if the popup is removed by unmounting\r\n      // When using React strict mode, the component is mounted twice.\r\n      // Firing the onClose callback here would be a false signal to remove the component.\r\n      popup.off('close', onClose);\r\n      if (popup.isOpen()) {\r\n        popup.remove();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    applyReactStyle(popup.getElement(), props.style);\r\n  }, [props.style]);\r\n\r\n  useImperativeHandle(ref, () => popup, []);\r\n\r\n  if (popup.isOpen()) {\r\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\r\n      popup.setLngLat([props.longitude, props.latitude]);\r\n    }\r\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\r\n      popup.setOffset(props.offset);\r\n    }\r\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\r\n      popup.options.anchor = props.anchor;\r\n      popup.setMaxWidth(props.maxWidth);\r\n    }\r\n    if (popup.options.className !== props.className) {\r\n      const prevClassList = getClassList(popup.options.className);\r\n      const nextClassList = getClassList(props.className);\r\n\r\n      for (const c of prevClassList) {\r\n        if (!nextClassList.has(c)) {\r\n          popup.removeClassName(c);\r\n        }\r\n      }\r\n      for (const c of nextClassList) {\r\n        if (!prevClassList.has(c)) {\r\n          popup.addClassName(c);\r\n        }\r\n      }\r\n      popup.options.className = props.className;\r\n    }\r\n  }\r\n\r\n  return createPortal(props.children, container);\r\n}\r\n\r\nexport default memo(forwardRef(Popup));\r\n", "import * as React from 'react';\r\nimport {useEffect, memo} from 'react';\r\nimport {applyReactStyle} from '../utils/apply-react-style';\r\nimport useControl from './use-control';\r\n\r\nimport type {ControlPosition, AttributionControlInstance} from '../types';\r\n\r\nexport type AttributionControlProps<OptionsT> = OptionsT & {\r\n  /** Placement of the control relative to the map. */\r\n  position?: ControlPosition;\r\n  /** CSS style override, applied to the control's container */\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nfunction AttributionControl<AttributionControlOptions, ControlT extends AttributionControlInstance>(\r\n  props: AttributionControlProps<AttributionControlOptions>\r\n): null {\r\n  const ctrl = useControl<ControlT>(\r\n    ({mapLib}) => new mapLib.AttributionControl(props) as ControlT,\r\n    {\r\n      position: props.position\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    applyReactStyle(ctrl._container, props.style);\r\n  }, [props.style]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default memo(AttributionControl);\r\n", "import {useContext, useMemo, useEffect} from 'react';\r\nimport type {IControl, ControlPosition} from '../types';\r\nimport {MapContext} from './map';\r\nimport type {MapContextValue} from './map';\r\n\r\ntype ControlOptions = {\r\n  position?: ControlPosition;\r\n};\r\n\r\nfunction useControl<T extends IControl>(\r\n  onCreate: (context: MapContextValue) => T,\r\n  opts?: ControlOptions\r\n): T;\r\n\r\nfunction useControl<T extends IControl>(\r\n  onCreate: (context: MapContextValue) => T,\r\n  onRemove: (context: MapContextValue) => void,\r\n  opts?: ControlOptions\r\n): T;\r\n\r\nfunction useControl<T extends IControl>(\r\n  onCreate: (context: MapContextValue) => T,\r\n  onAdd: (context: MapContextValue) => void,\r\n  onRemove: (context: MapContextValue) => void,\r\n  opts?: ControlOptions\r\n): T;\r\n\r\nfunction useControl<T extends IControl>(\r\n  onCreate: (context: MapContextValue) => T,\r\n  arg1?: ((context: MapContextValue) => void) | ControlOptions,\r\n  arg2?: ((context: MapContextValue) => void) | ControlOptions,\r\n  arg3?: ControlOptions\r\n): T {\r\n  const context = useContext(MapContext);\r\n  const ctrl = useMemo(() => onCreate(context), []);\r\n\r\n  useEffect(() => {\r\n    const opts = (arg3 || arg2 || arg1) as ControlOptions;\r\n    const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\r\n    const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\r\n\r\n    const {map} = context;\r\n    if (!map.hasControl(ctrl)) {\r\n      map.addControl(ctrl, opts?.position);\r\n      if (onAdd) {\r\n        onAdd(context);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (onRemove) {\r\n        onRemove(context);\r\n      }\r\n      // Map might have been removed (parent effects are destroyed before child ones)\r\n      if (map.hasControl(ctrl)) {\r\n        map.removeControl(ctrl);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return ctrl;\r\n}\r\n\r\nexport default useControl;\r\n", "/* global document */\r\nimport * as React from 'react';\r\nimport {useEffect, memo} from 'react';\r\nimport {applyReactStyle} from '../utils/apply-react-style';\r\nimport useControl from './use-control';\r\n\r\nimport type {ControlPosition, FullscreenControlInstance} from '../types';\r\n\r\nexport type FullscreenControlProps<OptionsT> = Omit<OptionsT, 'container'> & {\r\n  /** Id of the DOM element which should be made full screen. By default, the map container\r\n   * element will be made full screen. */\r\n  containerId?: string;\r\n  /** Placement of the control relative to the map. */\r\n  position?: ControlPosition;\r\n  /** CSS style override, applied to the control's container */\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nfunction FullscreenControl<FullscreenControlOptions, ControlT extends FullscreenControlInstance>(\r\n  props: FullscreenControlProps<FullscreenControlOptions>\r\n): null {\r\n  const ctrl = useControl<ControlT>(\r\n    ({mapLib}) =>\r\n      new mapLib.FullscreenControl({\r\n        container: props.containerId && document.getElementById(props.containerId)\r\n      }) as ControlT,\r\n    {position: props.position}\r\n  );\r\n\r\n  useEffect(() => {\r\n    applyReactStyle(ctrl._controlContainer, props.style);\r\n  }, [props.style]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default memo(FullscreenControl);\r\n", "import * as React from 'react';\r\nimport {useImperativeHandle, useRef, useEffect, forwardRef, memo} from 'react';\r\nimport {applyReactStyle} from '../utils/apply-react-style';\r\nimport useControl from './use-control';\r\n\r\nimport type {\r\n  ControlPosition,\r\n  GeolocateControlInstance,\r\n  GeolocateEvent,\r\n  GeolocateResultEvent,\r\n  GeolocateErrorEvent\r\n} from '../types';\r\n\r\nexport type GeolocateControlProps<\r\n  OptionsT,\r\n  ControlT extends GeolocateControlInstance\r\n> = OptionsT & {\r\n  /** Placement of the control relative to the map. */\r\n  position?: ControlPosition;\r\n  /** CSS style override, applied to the control's container */\r\n  style?: React.CSSProperties;\r\n\r\n  /** Called on each Geolocation API position update that returned as success. */\r\n  onGeolocate?: (e: GeolocateResultEvent<ControlT>) => void;\r\n  /** Called on each Geolocation API position update that returned as an error. */\r\n  onError?: (e: GeolocateErrorEvent<ControlT>) => void;\r\n  /** Called on each Geolocation API position update that returned as success but user position\r\n   * is out of map `maxBounds`. */\r\n  onOutOfMaxBounds?: (e: GeolocateResultEvent<ControlT>) => void;\r\n  /** Called when the GeolocateControl changes to the active lock state. */\r\n  onTrackUserLocationStart?: (e: GeolocateEvent<ControlT>) => void;\r\n  /** Called when the GeolocateControl changes to the background state. */\r\n  onTrackUserLocationEnd?: (e: GeolocateEvent<ControlT>) => void;\r\n};\r\n\r\nfunction GeolocateControl<GeolocateControlOptions, ControlT extends GeolocateControlInstance>(\r\n  props: GeolocateControlProps<GeolocateControlOptions, ControlT>,\r\n  ref: React.Ref<ControlT>\r\n) {\r\n  const thisRef = useRef({props});\r\n\r\n  const ctrl = useControl<ControlT>(\r\n    ({mapLib}) => {\r\n      const gc = new mapLib.GeolocateControl(props) as ControlT;\r\n\r\n      // Hack: fix GeolocateControl reuse\r\n      // When using React strict mode, the component is mounted twice.\r\n      // GeolocateControl's UI creation is asynchronous. Removing and adding it back causes the UI to be initialized twice.\r\n      // @ts-expect-error private method\r\n      const setupUI = gc._setupUI;\r\n      // @ts-expect-error private method\r\n      gc._setupUI = args => {\r\n        if (!gc._container.hasChildNodes()) {\r\n          setupUI(args);\r\n        }\r\n      };\r\n\r\n      gc.on('geolocate', e => {\r\n        thisRef.current.props.onGeolocate?.(e as GeolocateResultEvent<ControlT>);\r\n      });\r\n      gc.on('error', e => {\r\n        thisRef.current.props.onError?.(e as GeolocateErrorEvent<ControlT>);\r\n      });\r\n      gc.on('outofmaxbounds', e => {\r\n        thisRef.current.props.onOutOfMaxBounds?.(e as GeolocateResultEvent<ControlT>);\r\n      });\r\n      gc.on('trackuserlocationstart', e => {\r\n        thisRef.current.props.onTrackUserLocationStart?.(e as GeolocateEvent<ControlT>);\r\n      });\r\n      gc.on('trackuserlocationend', e => {\r\n        thisRef.current.props.onTrackUserLocationEnd?.(e as GeolocateEvent<ControlT>);\r\n      });\r\n\r\n      return gc;\r\n    },\r\n    {position: props.position}\r\n  );\r\n\r\n  thisRef.current.props = props;\r\n\r\n  useImperativeHandle(ref, () => ctrl, []);\r\n\r\n  useEffect(() => {\r\n    applyReactStyle(ctrl._container, props.style);\r\n  }, [props.style]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default memo(forwardRef(GeolocateControl));\r\n", "import * as React from 'react';\r\nimport {useEffect, memo} from 'react';\r\nimport {applyReactStyle} from '../utils/apply-react-style';\r\nimport useControl from './use-control';\r\n\r\nimport type {ControlPosition, NavigationControlInstance} from '../types';\r\n\r\nexport type NavigationControlProps<OptionsT> = OptionsT & {\r\n  /** Placement of the control relative to the map. */\r\n  position?: ControlPosition;\r\n  /** CSS style override, applied to the control's container */\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nfunction NavigationControl<NavigationControlOptions, ControlT extends NavigationControlInstance>(\r\n  props: NavigationControlProps<NavigationControlOptions>\r\n): null {\r\n  const ctrl = useControl<ControlT>(({mapLib}) => new mapLib.NavigationControl(props) as ControlT, {\r\n    position: props.position\r\n  });\r\n\r\n  useEffect(() => {\r\n    applyReactStyle(ctrl._container, props.style);\r\n  }, [props.style]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default memo(NavigationControl);\r\n", "import * as React from 'react';\r\nimport {useEffect, useRef, memo} from 'react';\r\nimport {applyReactStyle} from '../utils/apply-react-style';\r\nimport useControl from './use-control';\r\n\r\nimport type {ControlPosition, ScaleControlInstance} from '../types';\r\n\r\nexport type ScaleControlProps<OptionsT> = OptionsT & {\r\n  // These props will be further constraint by OptionsT\r\n  unit?: string;\r\n  maxWidth?: number;\r\n\r\n  /** Placement of the control relative to the map. */\r\n  position?: ControlPosition;\r\n  /** CSS style override, applied to the control's container */\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nfunction ScaleControl<ScaleControlOptions, ControlT extends ScaleControlInstance>(\r\n  props: ScaleControlProps<ScaleControlOptions>\r\n): null {\r\n  const ctrl = useControl<ControlT>(({mapLib}) => new mapLib.ScaleControl(props) as ControlT, {\r\n    position: props.position\r\n  });\r\n  const propsRef = useRef<ScaleControlProps<ScaleControlOptions>>(props);\r\n\r\n  const prevProps = propsRef.current;\r\n  propsRef.current = props;\r\n\r\n  const {style} = props;\r\n\r\n  if (props.maxWidth !== undefined && props.maxWidth !== prevProps.maxWidth) {\r\n    ctrl.options.maxWidth = props.maxWidth;\r\n  }\r\n  if (props.unit !== undefined && props.unit !== prevProps.unit) {\r\n    ctrl.setUnit(props.unit);\r\n  }\r\n\r\n  useEffect(() => {\r\n    applyReactStyle(ctrl._container, style);\r\n  }, [style]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default memo(ScaleControl);\r\n", "import {useContext, useEffect, useMemo, useState, useRef} from 'react';\r\nimport {MapContext} from './map';\r\nimport assert from '../utils/assert';\r\nimport {deepEqual} from '../utils/deep-equal';\r\n\r\nimport type {MapInstance, CustomLayerInterface, ILayer} from '../types';\r\n\r\n// Omiting property from a union type, see\r\n// https://github.com/microsoft/TypeScript/issues/39556#issuecomment-656925230\r\ntype OptionalId<T> = T extends {id: string} ? Omit<T, 'id'> & {id?: string} : T;\r\ntype OptionalSource<T> = T extends {source: string} ? Omit<T, 'source'> & {source?: string} : T;\r\n\r\nexport type LayerProps<LayerT> = OptionalSource<OptionalId<LayerT>> & {\r\n  /** If set, the layer will be inserted before the specified layer */\r\n  beforeId?: string;\r\n};\r\n\r\n/* eslint-disable complexity, max-statements */\r\nfunction updateLayer<LayerT extends ILayer>(\r\n  map: MapInstance,\r\n  id: string,\r\n  props: LayerProps<LayerT>,\r\n  prevProps: LayerProps<LayerT>\r\n) {\r\n  assert(props.id === prevProps.id, 'layer id changed');\r\n  assert(props.type === prevProps.type, 'layer type changed');\r\n\r\n  if (props.type === 'custom' || prevProps.type === 'custom') {\r\n    return;\r\n  }\r\n\r\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId} = props;\r\n\r\n  if (beforeId !== prevProps.beforeId) {\r\n    map.moveLayer(id, beforeId);\r\n  }\r\n  if (layout !== prevProps.layout) {\r\n    const prevLayout = prevProps.layout || {};\r\n    for (const key in layout) {\r\n      if (!deepEqual(layout[key], prevLayout[key])) {\r\n        map.setLayoutProperty(id, key, layout[key]);\r\n      }\r\n    }\r\n    for (const key in prevLayout) {\r\n      if (!layout.hasOwnProperty(key)) {\r\n        map.setLayoutProperty(id, key, undefined);\r\n      }\r\n    }\r\n  }\r\n  if (paint !== prevProps.paint) {\r\n    const prevPaint = prevProps.paint || {};\r\n    for (const key in paint) {\r\n      if (!deepEqual(paint[key], prevPaint[key])) {\r\n        map.setPaintProperty(id, key, paint[key]);\r\n      }\r\n    }\r\n    for (const key in prevPaint) {\r\n      if (!paint.hasOwnProperty(key)) {\r\n        map.setPaintProperty(id, key, undefined);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!deepEqual(filter, prevProps.filter)) {\r\n    map.setFilter(id, filter);\r\n  }\r\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\r\n    map.setLayerZoomRange(id, minzoom, maxzoom);\r\n  }\r\n}\r\n\r\nfunction createLayer<LayerT extends ILayer>(\r\n  map: MapInstance,\r\n  id: string,\r\n  props: LayerProps<LayerT>\r\n) {\r\n  // @ts-ignore\r\n  if (map.style && map.style._loaded && (!('source' in props) || map.getSource(props.source))) {\r\n    const options: LayerProps<LayerT> = {...props, id};\r\n    delete options.beforeId;\r\n\r\n    // @ts-ignore\r\n    map.addLayer(options, props.beforeId);\r\n  }\r\n}\r\n\r\n/* eslint-enable complexity, max-statements */\r\n\r\nlet layerCounter = 0;\r\n\r\nfunction Layer<LayerT extends ILayer>(props: LayerProps<LayerT | CustomLayerInterface>) {\r\n  const map = useContext(MapContext).map.getMap();\r\n  const propsRef = useRef(props);\r\n  const [, setStyleLoaded] = useState(0);\r\n\r\n  const id = useMemo(() => props.id || `jsx-layer-${layerCounter++}`, []);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\r\n      map.on('styledata', forceUpdate);\r\n      forceUpdate();\r\n\r\n      return () => {\r\n        map.off('styledata', forceUpdate);\r\n        // @ts-ignore\r\n        if (map.style && map.style._loaded && map.getLayer(id)) {\r\n          map.removeLayer(id);\r\n        }\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [map]);\r\n\r\n  // @ts-ignore\r\n  const layer = map && map.style && map.getLayer(id);\r\n  if (layer) {\r\n    try {\r\n      updateLayer(map, id, props, propsRef.current);\r\n    } catch (error) {\r\n      console.warn(error); // eslint-disable-line\r\n    }\r\n  } else {\r\n    createLayer(map, id, props);\r\n  }\r\n\r\n  // Store last rendered props\r\n  propsRef.current = props;\r\n\r\n  return null;\r\n}\r\n\r\nexport default Layer;\r\n", "export default function assert(condition: any, message: string) {\r\n  if (!condition) {\r\n    throw new Error(message);\r\n  }\r\n}\r\n", "import * as React from 'react';\r\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\r\nimport {cloneElement} from 'react';\r\nimport {MapContext} from './map';\r\nimport assert from '../utils/assert';\r\nimport {deepEqual} from '../utils/deep-equal';\r\n\r\nimport type {\r\n  MapInstance,\r\n  ISource,\r\n  CustomSource,\r\n  GeoJSONSourceImplementation,\r\n  ImageSourceImplemtation,\r\n  AnySourceImplementation\r\n} from '../types';\r\nimport type {GeoJSONSourceRaw, ImageSourceRaw, VectorSourceRaw} from '../types/style-spec-maplibre';\r\n\r\nexport type SourceProps<SourceT> = (SourceT | CustomSource) & {\r\n  id?: string;\r\n  children?: any;\r\n};\r\n\r\nlet sourceCounter = 0;\r\n\r\nfunction createSource<SourceT extends ISource>(\r\n  map: MapInstance,\r\n  id: string,\r\n  props: SourceProps<SourceT>\r\n) {\r\n  // @ts-ignore\r\n  if (map.style && map.style._loaded) {\r\n    const options = {...props};\r\n    delete options.id;\r\n    delete options.children;\r\n    // @ts-ignore\r\n    map.addSource(id, options);\r\n    return map.getSource(id);\r\n  }\r\n  return null;\r\n}\r\n\r\n/* eslint-disable complexity */\r\nfunction updateSource<SourceT extends ISource>(\r\n  source: AnySourceImplementation,\r\n  props: SourceProps<SourceT>,\r\n  prevProps: SourceProps<SourceT>\r\n) {\r\n  assert(props.id === prevProps.id, 'source id changed');\r\n  assert(props.type === prevProps.type, 'source type changed');\r\n\r\n  let changedKey = '';\r\n  let changedKeyCount = 0;\r\n\r\n  for (const key in props) {\r\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\r\n      changedKey = key;\r\n      changedKeyCount++;\r\n    }\r\n  }\r\n\r\n  if (!changedKeyCount) {\r\n    return;\r\n  }\r\n\r\n  const type = props.type;\r\n\r\n  if (type === 'geojson') {\r\n    (source as GeoJSONSourceImplementation).setData(\r\n      (props as unknown as GeoJSONSourceRaw).data as any\r\n    );\r\n  } else if (type === 'image') {\r\n    (source as ImageSourceImplemtation).updateImage({\r\n      url: (props as unknown as ImageSourceRaw).url,\r\n      coordinates: (props as unknown as ImageSourceRaw).coordinates\r\n    });\r\n  } else if ('setCoordinates' in source && changedKeyCount === 1 && changedKey === 'coordinates') {\r\n    source.setCoordinates((props as ImageSourceRaw).coordinates);\r\n  } else if ('setUrl' in source && changedKey === 'url') {\r\n    source.setUrl((props as VectorSourceRaw).url);\r\n  } else if ('setTiles' in source && changedKey === 'tiles') {\r\n    source.setTiles((props as VectorSourceRaw).tiles);\r\n  } else {\r\n    // eslint-disable-next-line\r\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\r\n  }\r\n}\r\n/* eslint-enable complexity */\r\n\r\nfunction Source<SourceT extends ISource>(props: SourceProps<SourceT>) {\r\n  const map = useContext(MapContext).map.getMap();\r\n  const propsRef = useRef(props);\r\n  const [, setStyleLoaded] = useState(0);\r\n\r\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      /* global setTimeout */\r\n      const forceUpdate = () => setTimeout(() => setStyleLoaded(version => version + 1), 0);\r\n      map.on('styledata', forceUpdate);\r\n      forceUpdate();\r\n\r\n      return () => {\r\n        map.off('styledata', forceUpdate);\r\n        // @ts-ignore\r\n        if (map.style && map.style._loaded && map.getSource(id)) {\r\n          // Parent effects are destroyed before child ones, see\r\n          // https://github.com/facebook/react/issues/16728\r\n          // Source can only be removed after all child layers are removed\r\n          const allLayers = map.getStyle()?.layers;\r\n          if (allLayers) {\r\n            for (const layer of allLayers) {\r\n              // @ts-ignore (2339) source does not exist on all layer types\r\n              if (layer.source === id) {\r\n                map.removeLayer(layer.id);\r\n              }\r\n            }\r\n          }\r\n          map.removeSource(id);\r\n        }\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [map]);\r\n\r\n  // @ts-ignore\r\n  let source = map && map.style && map.getSource(id);\r\n  if (source) {\r\n    updateSource(source, props, propsRef.current);\r\n  } else {\r\n    source = createSource(map, id, props);\r\n  }\r\n  propsRef.current = props;\r\n\r\n  return (\r\n    (source &&\r\n      React.Children.map(\r\n        props.children,\r\n        child =>\r\n          child &&\r\n          cloneElement(child, {\r\n            source: id\r\n          })\r\n      )) ||\r\n    null\r\n  );\r\n}\r\n\r\nexport default Source;\r\n"],
  "mappings": "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",
  "names": ["React", "React", "import_react", "result", "import_react", "mapLib", "mapLib", "React", "import_react", "mapLib", "import_react_dom", "import_react", "mapLib", "import_react", "import_react", "mapLib", "import_react", "mapLib", "import_react", "mapLib", "import_react", "mapLib", "import_react", "mapLib", "import_react", "React", "import_react", "useMap", "Map", "Marker", "Popup", "AttributionControl", "FullscreenControl", "NavigationControl", "GeolocateControl", "ScaleControl", "Layer", "Source"]
}
